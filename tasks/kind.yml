---
- name: "K8S Common - Kinds - Debug Informations - Kind : {{ kind.kind | default('') }}"
  ansible.builtin.debug:
    msg:
      - kind: "{{ kind | default('') }}"
    verbosity: "{{ k8s_common_debug_level | default(1) }}"
  tags:
    - k8s_common
    - k8s_common_kinds
    - k8s_common_kinds_debug

- name: "K8S Common - Kinds - Manage - Kind (Direct) : {{ kind.kind | default('') }}"
  kubernetes.core.k8s:
    api_key: "{{ kind.api_key | default(omit) }}"
    api_version: "{{ kind.api_version | default(omit) }}"
    append_hash: "{{ kind.append_hash | default(omit) }}"
    apply: "{{ kind.apply | default(omit) }}"
    ca_cert: "{{ kind.ca_cert | default(omit) }}"
    client_cert: "{{ kind.client_cert | default(omit) }}"
    client_key: "{{ kind.client_key | default(omit) }}"
    context: "{{ kind.context | default(omit) }}"
    continue_on_error: "{{ kind.continue_on_error | default(omit) }}"
    delete_options: "{{ kind.delete_options | default(omit) }}"
    force: "{{ kind.force | default(omit) }}"
    generate_name: "{{ kind.generate_name | default(omit) }}"
    host: "{{ kind.host | default(omit) }}"
    impersonate_groups: "{{ kind.impersonate_groups | default(omit) }}"
    impersonate_user: "{{ kind.impersonate_user | default(omit) }}"
    kind: "{{ kind.kind | default(omit) }}"
    kubeconfig: "{{ kind.kubeconfig | default(k8s_common_kubeconfig.file) }}"
    label_selectors: "{{ kind.label_selectors | default(omit) }}"
    merge_type: "{{ kind.merge_type | default(omit) }}"
    name: "{{ kind.name | default(omit) }}"
    namespace: "{{ kind.namespace | default(omit) }}"
    no_proxy: "{{ kind.no_proxy | default(omit) }}"
    password: "{{ kind.password | default(omit) }}"
    persist_config: "{{ kind.persist_config | default(omit) }}"
    proxy: "{{ kind.proxy | default(omit) }}"
    proxy_headers: "{{ kind.proxy_headers | default(omit) }}"
    resource_definition: "{{ kind.resource_definition | default(omit) }}"
    server_side_apply: "{{ kind.server_side_apply | default(omit) }}"
    #src: "{{ kind.src | default(omit) }}"
    state: "{{ kind.state | default(omit) }}"
    #template: "{{ kind.template | default(omit) }}"
    username: "{{ kind.username | default(omit) }}"
    validate: "{{ kind.validate | default(omit) }}"
    validate_certs: "{{ kind.validate_certs | default(omit) }}"
    wait: "{{ kind.wait | default(omit) }}"
    wait_condition: "{{ kind.wait_condition | default(omit) }}"
    wait_sleep: "{{ kind.wait_sleep | default(omit) }}"
    wait_timeout: "{{ kind.wait_timeout | default(omit) }}"
  when:
    - kind.template is undefined
    - kind.src is undefined
    - kind.manage  | default(true)
    - kind.kind is defined or kind.resource_definition
  delegate_to: localhost
  tags:
    - k8s_common
    - k8s_common_kinds
    - k8s_common_kinds_manage
    - k8s_common_kinds_direct

- name: "K8S Common - Kinds - Manage - Kind (Through Template) : {{ kind.kind | default('') }}"
  kubernetes.core.k8s:
    api_key: "{{ kind.api_key | default(omit) }}"
    api_version: "{{ kind.api_version | default(omit) }}"
    append_hash: "{{ kind.append_hash | default(omit) }}"
    apply: "{{ kind.apply | default(omit) }}"
    ca_cert: "{{ kind.ca_cert | default(omit) }}"
    client_cert: "{{ kind.client_cert | default(omit) }}"
    client_key: "{{ kind.client_key | default(omit) }}"
    context: "{{ kind.context | default(omit) }}"
    continue_on_error: "{{ kind.continue_on_error | default(omit) }}"
    delete_options: "{{ kind.delete_options | default(omit) }}"
    force: "{{ kind.force | default(omit) }}"
    generate_name: "{{ kind.generate_name | default(omit) }}"
    host: "{{ kind.host | default(omit) }}"
    impersonate_groups: "{{ kind.impersonate_groups | default(omit) }}"
    impersonate_user: "{{ kind.impersonate_user | default(omit) }}"
    kind: "{{ kind.kind | default(omit) }}"
    kubeconfig: "{{ registry.kubeconfig | default(k8s_common_kubeconfig.file) | default(omit) }}"
    label_selectors: "{{ kind.label_selectors | default(omit) }}"
    merge_type: "{{ kind.merge_type | default(omit) }}"
    name: "{{ kind.name | default(omit) }}"
    namespace: "{{ kind.namespace | default(omit) }}"
    no_proxy: "{{ kind.no_proxy | default(omit) }}"
    password: "{{ kind.password | default(omit) }}"
    persist_config: "{{ kind.persist_config | default(omit) }}"
    proxy: "{{ kind.proxy | default(omit) }}"
    proxy_headers: "{{ kind.proxy_headers | default(omit) }}"
    # resource_definition: "{{ kind.resource_definition | default(omit) }}"
    server_side_apply: "{{ kind.server_side_apply | default(omit) }}"
    # src: "{{ kind.src | default(omit) }}"
    state: "{{ kind.state | default(omit) }}"
    template: "{{ kind.template | default(omit) }}"
    username: "{{ kind.username | default(omit) }}"
    validate: "{{ kind.validate | default(omit) }}"
    validate_certs: "{{ kind.validate_certs | default(omit) }}"
    wait: "{{ kind.wait | default(omit) }}"
    wait_condition: "{{ kind.wait_condition | default(omit) }}"
    wait_sleep: "{{ kind.wait_sleep | default(omit) }}"
    wait_timeout: "{{ kind.wait_timeout | default(omit) }}"
  when:
    - kind.template is defined
    - kind.src is undefined
    - kind.resource_definition is undefined
    - kind.manage  | default(true)
  delegate_to: localhost
  tags:
    - k8s_common
    - k8s_common_kinds
    - k8s_common_kinds_manage
    - k8s_common_kinds_manage_template

- name: "K8S Common - Kinds - Manage - Kind (Through YML File) : {{ kind.kind | default('') }}"
  kubernetes.core.k8s:
    api_key: "{{ kind.api_key | default(omit) }}"
    api_version: "{{ kind.api_version | default(omit) }}"
    append_hash: "{{ kind.append_hash | default(omit) }}"
    apply: "{{ kind.apply | default(omit) }}"
    ca_cert: "{{ kind.ca_cert | default(omit) }}"
    client_cert: "{{ kind.client_cert | default(omit) }}"
    client_key: "{{ kind.client_key | default(omit) }}"
    context: "{{ kind.context | default(omit) }}"
    continue_on_error: "{{ kind.continue_on_error | default(omit) }}"
    delete_options: "{{ kind.delete_options | default(omit) }}"
    force: "{{ kind.force | default(omit) }}"
    generate_name: "{{ kind.generate_name | default(omit) }}"
    host: "{{ kind.host | default(omit) }}"
    impersonate_groups: "{{ kind.impersonate_groups | default(omit) }}"
    impersonate_user: "{{ kind.impersonate_user | default(omit) }}"
    kind: "{{ kind.kind | default(omit) }}"
    kubeconfig: "{{ kind.kubeconfig | default(k8s_common_kubeconfig.file) }}"
    label_selectors: "{{ kind.label_selectors | default(omit) }}"
    merge_type: "{{ kind.merge_type | default(omit) }}"
    name: "{{ kind.name | default(omit) }}"
    namespace: "{{ kind.namespace | default(omit) }}"
    no_proxy: "{{ kind.no_proxy | default(omit) }}"
    password: "{{ kind.password | default(omit) }}"
    persist_config: "{{ kind.persist_config | default(omit) }}"
    proxy: "{{ kind.proxy | default(omit) }}"
    proxy_headers: "{{ kind.proxy_headers | default(omit) }}"
    # resource_definition: "{{ kind.resource_definition | default(omit) }}"
    server_side_apply: "{{ kind.server_side_apply | default(omit) }}"
    src: "{{ kind.src | default(omit) }}"
    state: "{{ kind.state | default(omit) }}"
    # template: "{{ kind.template | default(omit) }}"
    username: "{{ kind.username | default(omit) }}"
    validate: "{{ kind.validate | default(omit) }}"
    validate_certs: "{{ kind.validate_certs | default(omit) }}"
    wait: "{{ kind.wait | default(omit) }}"
    wait_condition: "{{ kind.wait_condition | default(omit) }}"
    wait_sleep: "{{ kind.wait_sleep | default(omit) }}"
    wait_timeout: "{{ kind.wait_timeout | default(omit) }}"
  when:
    - kind.src is defined
    - kind.template is undefined
    - kind.resource_definition is undefined
    - kind.manage  | default(true)
  delegate_to: localhost
  tags:
    - k8s_common
    - k8s_common_kinds
    - k8s_common_kinds_manage
    - k8s_common_kinds_manage_file

# - name: "K8S Common - Kinds - Manage - Kind : {{ kind.kind | default('') }}"
#   kubernetes.core.k8s:
#     kind: "{{ kind.kind }}"
#     api_version: "{{ kind.api_version | default(omit) }}"
#     name: "{{ kind.name | default(omit) }}"
#     state: "{{ kind.state | default(omit) }}"
#     context: "{{ kind.state | default(omit) }}"
#     kubeconfig: "{{ kind.kubeconfig | default(k8s_common_kubeconfig.file) }}"
#     wait: true
#     wait_timeout: "{{ wait_timeout_provisioning }}"
#   when:
#     - kind.manage  | default(true)
#     - kind.kind
#   delegate_to: localhost
#   tags:
#     - k8s_common
#     - k8s_common_kinds
#     - k8s_common_kinds_manage

...
