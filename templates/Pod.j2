---
apiVersion: v1
kind: Pod
Namespace: "{{ kind.namespace | default(omit) }}"

metadata:
  name: "{{ kind.Pod.name | default(omit) }}"
spec:
  initContainers:
  {% for initContainer in kind.initContainers | default(omit) %}
    - name: {{ initContainer.name | default(omit) }}
      image: {{ initContainer.image | default(omit) }}
      command: {{ initContainer.command | default(omit) }}
      env:
      {% for env in initContainers.env | default(omit) %}
        - name: {{ env.name | default(omit) }}
          value: "{{ env.value | default(omit) }}"
      {% endfor %}
      volumeMounts:
      {% for volume in initContainers.volumeMounts | default(omit) %}
        - mountPath: "{{ volume.mountPath | default(omit) }}"
          name: {{ volume.name | default(omit) }}
      {% endfor %}
  {% endfor %}
  imagePullSecrets:
  {% for imagePullSecret in kind.imagePullSecrets | default(omit) %}
    - name: {{ imagePullSecret.name | default(omit) }}
  {% endfor %}



  

  containers:
    - name: "{{ job.name }}-container"
      image: "{{ job.image }}"
      workingDir: "{{ job.working_directory }}"
      command: ["sh", "-c", "aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \
        aws configure set region $AWS_REGION && \
        aws configure set endpoint_url $AWS_ENDPOINT_URL && \
        sleep 5 && \ 
        {{ job.cmd }} && \
        {{ aws_cmd_export_output }} echo $? "]
      env:
      - name: AWS_ACCESS_KEY_ID 
        value: "{{ storage.s3.accesskeyid }}"
      - name: AWS_SECRET_ACCESS_KEY 
        value: "{{ storage.s3.secretaccesskey }}"
      - name: AWS_REGION 
        value: "{{ storage.s3.region }}"
      - name: AWS_ENDPOINT_URL
        value: "{{ storage.s3.endpoint }}"
      - name: AWS_BUCKET_NAME 
        value: "{{ storage.s3.bucket.name }}"
      - name: MOUNT_PATH 
        value: "{{ storage.data_path }}"
      volumeMounts:
      - mountPath: "{{ storage.data_path }}"
        name: data-volume
  imagePullSecrets:
      - name: gaelregcred

  volumes:
  - name: data-volume
    persistentVolumeClaim:
      claimName: "{{ persistent_volume_claim_name }}"

...
